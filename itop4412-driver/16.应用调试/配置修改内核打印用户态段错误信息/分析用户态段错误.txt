1. 修改arch/arm/kernel/traps.c    43: unsigned int user_debug = 0xff;
2. 配置内核CONFIG_DEBUG_USER
3. 修改arch/arm/mm/fault.c		  170: __do_user_fault函数
	unsigned int reg_value;
		int i, ret;
		
	#ifdef CONFIG_DEBUG_USER
		if (user_debug & UDBG_SEGV) {
			printk(KERN_DEBUG "%s: unhandled page fault (%d) at 0x%08lx, code 0x%03x\n",
				   tsk->comm, sig, addr, fsr);
			show_pte(tsk->mm, addr);
			show_regs(regs);

			printk("Stack: \n");
			for(i=0;i<1024;i++)
			{
				ret = copy_from_user(&reg_value, (const void __user *)regs->ARM_sp + (i * 4), 4);
				if(ret)
				{
					break;
				}
				if(i % 8 == 0)
				{
					printk("\n");
				}
				printk("%08x ", reg_value);
			}
			printk("\nEnd of stack!\n");

		}
4. 静态编译test_debug,反汇编test_debug(arm-none-linux-gnueabi-objdump -D test_debug > test_debug.dis)
   运行test_debug得如下打印信息
   
[   37.260416] pgd = d4948000
[   37.262182] [00000000] *pgd=5494e831, *pte=00000000, *ppte=00000000
[   37.268424]
[   37.269908] Pid: 1063, comm:           test_debug
[   37.274662] CPU: 0    Not tainted  (3.0.15 #6)
[   37.279130] PC is at 0x822c								//出错的PC地址
[   37.281866] LR is at 0x8254								//出错时的lr地址
[   37.284590] pc : [<0000822c>]    lr : [<00008254>]    psr: 60000010				//出错时的寄存器的值
[   37.284611] sp : bea9fad0  ip : fbad2a84  fp : bea9fadc
[   37.296210] r10: 00000000  r9 : 00000000  r8 : 00000000
[   37.301300] r7 : 00000000  r6 : 00000000  r5 : 00000000  r4 : 0000829c
[   37.307802] r3 : 00000000  r2 : 00000012  r1 : 00000000  r0 : 00000000
[   37.314316] Flags: nZCv  IRQs on  FIQs on  Mode USER_32  ISA ARM  Segment user
[   37.321619] Control: 10c5387d  Table: 5494804a  DAC: 00000015
[   37.327396]
[   37.327409] IP: 0xfbad2a04:
[   37.331497] 2a04  ******** ********
 ******** ******** ******** ******** ******** ********
[   37.352580] 2a24  ******** ******** ******** ******** ******** ******** ******** ********
[   37.370150] 2a44  ******** ******** ******** ******** ******** ******** ******** ********
[   37.376998] 2a64  ******** ******** ******** ******** ******** ******** ******** ********
[   37.386104] 2a84  ******** ******** ******** ******** ******** ******** ******** ********
[   37.394243] 2aa4  ******** ******** ******** ******** ******** ******** ******** ********
[   37.402402] 2ac4  ******** ******** ******** ******** ******** ******** ******** ********
[   37.410562] 2ae4  ******** ******** ******** ******** ******** ******** ******** ********
[   37.418793] [<c00476e0>] (show_regs+0x0/0x50) from [<c004e71c>] (__do_user_fault+0xb0/0x154)		//出错时进入内核态打印信息的函数调用关系
[   37.427420]  r4:d6109f40 r3:d66c8000
[   37.430753] [<c004e66c>] (__do_user_fault+0x0/0x154) from [<c004e960>] (do_page_fault+0x114/0x1f0)
[   37.439965] [<c004e84c>] (do_page_fault+0x0/0x1f0) from [<c003e558>] (do_DataAbort+0x3c/0xa4)
[   37.448277] [<c003e51c>] (do_DataAbort+0x0/0xa4) from [<c00458a4>] (ret_from_exception+0x0/0x10)
[   37.457266] Exception stack(0xd66c9fb0 to 0xd66c9ff8)
[   37.462045] 9fa0:                                     00000000 00000000 00000012 00000000
[   37.470205] 9fc0: 0000829c 00000000 00000000 00000000 00000000 00000000 00000000 bea9fadc
[   37.478480] 9fe0: fbad2a84 bea9fad0 00008254 0000822c 60000010 ffffffff
[   37.484922]  r7:00000000 r6:00000000 r5:00000000 r4:ffffffff
[   37.490498] Stack:																				//用户态的栈(自己加的代码)
[   37.492581]
[   37.494056] 00000000 00000000 bea9fb14 bea9faec 00000000 00000000 bea9fafc 00008274
			  C'sp(C是调用的最底层函数，不需入栈lr) B'sp    				  ret addr
[   37.501781] 0006fcd4 00000000 bea9fb14 000082e0 bea9fc64 00000001 00000012 00000000
		       A'sp                       ret addr main'sp
[   37.509506] 00000000 00009ee4 00000000 00000001 bea9fc64 0000829c 0000a444 000901cc
					    ret addr __libc_start_main'sp
[   37.517231] 00000000 00000000 00000000 00000000 00000000 00000000 bea9fb18 00009ea4
[   37.524957] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[   37.532682] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[   37.540408] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[   37.548132] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[   37.555858] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[   37.563583] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[   37.571308] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[   37.579033] 00000000 00000000 00000000 00000000 00000000 2a197e21 00000000 00000000
[   37.586758] 00000000 0000814c 0000a3dc 00000000 bea9fc64 bea9fd6f 00000000 bea9fd85
		                ret addr
[   37.594484] bea9fd9e bea9fdbf bea9fdc9 bea9fe2d bea9fe45 bea9fe4c bea9fe62 bea9fe7a
[   37.602209] bea9fe9f bea9fed1 bea9feea bea9fef5 bea9ff18 bea9ff35 bea9ff5e bea9ff6c
[   37.609987] bea9ff93 bea9ffb8 bea9ffbe 00000000 00000010 0000b0d7 00000006 00001000
